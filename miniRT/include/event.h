#ifndef EVENT_H
# define EVENT_H

# include "canvas.h"

typedef enum e_event {
	X11_KEY_PRESS = 2,
	X11_KEY_RELEASE,
	X11_BUTTON_PRESS,
	X11_BUTTON_RELEASE,
	X11_MOTION_NOTIFY,
	X11_ENTER_NOTIFY,
	X11_LEAVE_NOTIFY,
	X11_FOCUS_IN,
	X11_FOCUS_OUT,
	X11_KEYMAP_NOTIFY,
	X11_EXPOSE,
	X11_GRAPHICS_EXPOSE,
	X11_NO_EXPOSE,
	X11_VISIBILITY_NOTIFY,
	X11_CREATE_NOTIFY,
	X11_DESTROY_NOTIFY,
	X11_UNMAP_NOTIFY,
	X11_MAP_NOTIFY,
	X11_MAP_REQUEST,
	X11_REPARENT_NOTIFY,
	X11_CONFIGURE_NOTIFY,
	X11_CONFIGURE_REQUEST,
	X11_GRAVITY_NOTIFY,
	X11_RESIZE_REQUEST,
	X11_CIRCULATE_NOTIFY,
	X11_CIRCULATE_REQUEST,
	X11_PROPERTY_NOTIFY,
	X11_SELECTION_CLEAR,
	X11_SELECTION_REQUEST,
	X11_SELECTION_NOTIFY,
	X11_COLORMAP_NOTIFY,
	X11_CLIENT_MESSAGE,
	X11_MAPPING_NOTIFY,
	X11_GENERIC_EVENT,
	X11_LAST_EVENT
}	t_event;

typedef enum e_mask {
	MASK_NO_EVENT = 0L,
	MASK_KEY_PRESS = 1L<<0,
	MASK_KEY_RELEASE = 1L<<1,
	MASK_BUTTON_PRESS = 1L<<2,
	MASK_BUTTON_RELEASE = 1L<<3,
	MASK_ENTER_WINDOW = 1L<<4,
	MASK_LEAVE_WINDOW = 1L<<5,
	MASK_POINTER_MOTION = 1L<<6,
	MASK_POINTER_MOTION_HINT = 1L<<7,
	MASK_BUTTON1_MOTION = 1L<<8,
	MASK_BUTTON2_MOTION = 1L<<9,
	MASK_BUTTON3_MOTION = 1L<<10,
	MASK_BUTTON4_MOTION = 1L<<11,
	MASK_BUTTON5_MOTION = 1L<<12,
	MASK_BUTTON_MOTION = 1L<<13,
	MASK_KEYMAP_STATE = 1L<<14,
	MASK_EXPOSURE = 1L<<15,
	MASK_VISIBILITY_CHANGE = 1L<<16,
	MASK_STRUCTURE_NOTIFY = 1L<<17,
	MASK_RESIZE_REDIRECT = 1L<<18,
	MASK_SUBSTRUCTURE_NOTIFY = 1L<<19,
	MASK_SUBSTRUCTURE_REDIRECT = 1L<<20,
	MASK_FOCUS_CHANGE = 1L<<21,
	MASK_PROPERTY_CHANGE = 1L<<22,
	MASK_COLORMAP_CHANGE = 1L<<23,
	MASK_OWNER_GRABBUTTON = 1L<<24
}	t_mask;

typedef enum e_key {
	KEY_ESC = 53,
	KEY_LEFT = 123,
	KEY_RIGHT = 124
}	t_key;

void	bind_hooks(t_data *data);

#endif
